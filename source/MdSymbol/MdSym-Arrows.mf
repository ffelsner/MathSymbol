
def ifneg(expr a,b) =
  if negated: a else: b fi
enddef;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "single arrow (" & decimal alpha & ")";
    z1 = foot;
    z2 = head-1/2arrow_spread*dir arrow_dir;
    draw_line_ec(1,2);
    draw_arrowhead_fo_add(4)(head, arrow_dir, arrow_spread);

    if negated:
      draw_stroke_through_arrow(6,7)(1/2[foot, head - 1/2arrow_spread * dir arrow_dir], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 6/5, ifneg(19/10, 13/10) * arrow_spread#); "double arrow (" & decimal alpha & ")";
    path apath;
    z1 - z0 = z3 - z2 = equal_spread * dir (arrow_dir + 90);

    1/2[z0,z1] = foot-1/2rule_thickness*dir arrow_dir;
    1/2[z2,z3] = head;
    arrowhead_fo_path(6)(head, arrow_dir, 13/10arrow_spread)(apath);
  
    z4 = arrowhead_intersection(z6[0], arrow_dir, 13/10arrow_spread, z0 -- z2);
    z5 = arrowhead_intersection(z6[0], arrow_dir, 13/10arrow_spread, z1 -- z3);

  if known ps_output:
    path lpatha, lpathb, apathb, apathc;
    line_path(0,4)(lpatha);     line_path(1,5)(lpathb);
    find_outlines(reverse lpatha,apath)(apathb);
    find_outlines(reverse lpathb,apathb[1])(apathc);
    fill apathc[1];
  else:
    draw_line(0,4);     draw_line(1,5);
    fill apath;
  fi
    if negated:
      draw_stroke_through_arrow(8,9)(1/2[foot, head - arrow_spread * dir arrow_dir], alpha, 19/10arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
    penlabels(0,2);
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 6/5, ifneg(3/2, 1) * arrow_spread#); "bidirectinal arrow (" & decimal alpha & ")";
    z1 = foot+1/2arrow_spread*dir arrow_dir; z2 = head-1/2arrow_spread*dir arrow_dir;
    draw_line_ec(1,2);
    draw_arrowhead_fo_add(3)(head, arrow_dir,     arrow_spread);
    draw_arrowhead_fo_add(5)(foot, arrow_dir+180, arrow_spread);

    if negated:
      draw_stroke_through_arrow(7,8)(1/2[foot, head], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 7/5, ifneg(19/10, 13/10) * arrow_spread#); "double bidirectional arrow (" & decimal alpha & ")";
    path  apa, apb;
    z1 - z0 = z3 - z2 = equal_spread * dir (arrow_dir + 90);

    1/2[z0,z1] = foot;
    1/2[z2,z3] = head;

    arrowhead_fo_path(8)(head, arrow_dir,     13/10arrow_spread)(apa);
    arrowhead_fo_path(10)(foot, arrow_dir+180, 13/10arrow_spread)(apb);

    z4 = arrowhead_intersection(z10[0], arrow_dir+180, 13/10arrow_spread, z0 -- z2);
    z5 = arrowhead_intersection(z8[0], arrow_dir,     13/10arrow_spread, z0 -- z2);
    z6 = arrowhead_intersection(z10[0], arrow_dir+180, 13/10arrow_spread, z1 -- z3);
    z7 = arrowhead_intersection(z8[0], arrow_dir,     13/10arrow_spread, z1 -- z3);

  if known ps_output:
    path lpa, lpb, apc, apd, ape;
    line_path(4,5)(lpa);
    line_path(6,7)(lpb);
    find_outlines(reverse lpa,apa)(apc);
    find_outlines(reverse lpb,apc[1])(apd);
    find_outlines(apb,apd[1])(ape);
    fill ape[1];
    unfill ape[2];
  else:
    draw_line(4,5);
    draw_line(6,7);
    fill apa; fill apb;
  fi

    if negated:
      draw_stroke_through_arrow(12,13)(1/2[foot, head], alpha, 19/10arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 5/4, ifneg(3/2, 1) * arrow_spread#); "double-head arrow (" & decimal alpha & ")";
    z1 = foot-1/2rule_thickness*dir arrow_dir; z2 = head-1/2rule_thickness*dir arrow_dir;

  if known ps_output:
    path lpa, apa, apb, apc, apd;
    line_path(1,2)(lpa);
    arrowhead_fo_path(3)(head, arrow_dir, arrow_spread)(apa);
    arrowhead_fo_path(5)(head - 1/4arrow_len * dir arrow_dir, arrow_dir, arrow_spread)(apb);
    find_outlines(reverse lpa,apa)(apc);
    find_outlines(apb,apc[1])(apd);
    fill apd[1];
  else:
    draw_line(1,2);
    draw_arrowhead_fo(3)(head, arrow_dir, arrow_spread);
    draw_arrowhead_fo(5)(head - 1/4arrow_len * dir arrow_dir, arrow_dir, arrow_spread);
  fi
    if negated:
      draw_stroke_through_arrow(7,8)(1/2[foot, head - (1/2arrow_spread + 1/4arrow_len) * dir arrow_dir], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "tailed arrow (" & decimal alpha & ")";
    z0  = foot + 3/4arrow_spread * dir arrow_dir;
    z1  = head;

  if known ps_output:
    path lpa, apa, apb, apc, apd;
    arrowhead_fo_path(2)(head, arrow_dir, arrow_spread)(apa);
    arrowhead_bo_path(4)(z0,   arrow_dir, arrow_spread)(apb);
    line_path(2[0],4[0])(lpa);
    find_outlines(reverse lpa,apa)(apc);
    find_outlines(apb,apc[1])(apd);
    fill apd[1];
  else:
    draw_arrowhead_fo(2)(head, arrow_dir, arrow_spread);
    draw_arrowhead_bo(4)(z0,   arrow_dir, arrow_spread);
    draw_line(2[0],4[0]);
  fi
    if negated:
      draw_stroke_through_arrow(8,9)(1/2[foot, head], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "arrow with foot (" & decimal alpha & ")";

    z1 = foot + 1/4rule_thickness * dir arrow_dir; z2 = head-1/2arrow_spread*dir arrow_dir;
    draw_line(1,2);
    z3 = (foot - 1/2arrow_spread * dir (arrow_dir + 90));
    z4 = (foot + 1/2arrow_spread * dir (arrow_dir + 90));
    draw_line_ec(3,4);
    draw_arrowhead_fo_add(5)(head, arrow_dir, arrow_spread);

    if negated:
      draw_stroke_through_arrow(7,8)(1/2[foot, head - 1/2arrow_spread * dir arrow_dir], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "left embedding (" & decimal alpha & ")";

    draw_arrowhead_fo_add(1)(head, arrow_dir, arrow_spread);
    draw_half_circle(3)(foot + 1/4arrow_spread * (dir (arrow_dir + 90) + dir arrow_dir),
      1/4arrow_spread, arrow_dir + 90);
    z4 = head-1/2arrow_spread*dir arrow_dir; penpos4(rule_thickness, arrow_dir + 90 + 180);
    penstroke z3[5]e .. z4e;

    if negated:
      draw_stroke_through_arrow(5,6)(1/2[foot, head - 1/2arrow_spread * dir arrow_dir], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
    penlabels(4);
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "right embedding (" & decimal alpha & ")";

    draw_arrowhead_fo_add(1)(head, arrow_dir, arrow_spread);
    draw_half_circle(3)(foot + 1/4arrow_spread * (dir (arrow_dir - 90) + dir arrow_dir),
      1/4arrow_spread, arrow_dir + 90);
    z4 = head-1/2arrow_spread*dir arrow_dir; penpos4(rule_thickness, arrow_dir + 90);
    penstroke z3[1]e .. z4e;
  
    if negated:
      draw_stroke_through_arrow(5,6)(1/2[foot, head - 1/2arrow_spread * dir arrow_dir], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "left harpoon (" & decimal alpha & ")";
    z1 = foot-1/2rule_thickness*dir arrow_dir; z2 = head;
    draw_arrowhead_left(4)(head, arrow_dir, arrow_spread);
    draw_line(1,4[0]);
  
    if negated:
      draw_stroke_through_arrow(6,7)(1/2[foot, head - 1/2arrow_spread * dir arrow_dir], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "right harpoon (" & decimal alpha & ")";
    z1 = foot-1/2rule_thickness*dir arrow_dir; z2 = head; 
    draw_arrowhead_right(3)(head, arrow_dir, arrow_spread);
    draw_line(1,3[0]);
    if negated:
      draw_stroke_through_arrow(5,6)(1/2[foot, head - 1/2arrow_spread * dir arrow_dir], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "left left harpoon (" & decimal alpha & ")";
    z1 = foot; z2 = head;
    draw_arrowhead_left(3)(head, arrow_dir,     arrow_spread);
    draw_arrowhead_left(4)(foot, arrow_dir+180, arrow_spread);
    draw_line(3[0],4[0]);
  
    if negated:
      draw_stroke_through_arrow(5,6)(1/2[foot, head], alpha, 3/2arrow_spread)
                          (80, 80, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "right right harpoon (" & decimal alpha & ")";
    z1 = foot; z2 = head; 
    draw_arrowhead_right(3)(head, arrow_dir,     arrow_spread);
    draw_arrowhead_right(4)(foot, arrow_dir+180, arrow_spread);
    draw_line(3[0],4[0]);
  
    if negated:
      draw_stroke_through_arrow(5,6)(1/2[foot, head], alpha, 3/2arrow_spread)
                          (70, 70, 100, 100);
    fi
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread# + equal_spread#); "double left left harpoon (" & decimal alpha & ")";
    pickup rule_pen;

    z1 - z0 = z3 - z2 = equal_spread * dir (arrow_dir + 90);

    0.5[z0,z1] = foot;
    0.5[z2,z3] = head;

    z6 = z1 -1/2rule_thickness*dir arrow_dir;
    z7 = z2 +1/2rule_thickness*dir arrow_dir;
  
    draw_arrowhead_left(4)(z3, arrow_dir,     arrow_spread);
    draw_arrowhead_left(5)(z0, arrow_dir+180, arrow_spread);
    draw_line(5[0],7);
    draw_line(6,4[0]);

  
    if negated:
      draw_stroke_through_arrow(8,9)(1/2[foot, head], alpha, 3/2arrow_spread)
	(80, 80, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread# + equal_spread#); "double right right harpoon (" & decimal alpha & ")";

    z1 - z0 = z3 - z2 = equal_spread * dir (arrow_dir + 90);

    0.5[z0,z1] = foot;
    0.5[z2,z3] = head;

    z6 = z3 +1/2rule_thickness*dir arrow_dir;
    z7 = z0 -1/2rule_thickness*dir arrow_dir;
  
    draw_arrowhead_right(4)(z2, arrow_dir,     arrow_spread);
    draw_arrowhead_right(5)(z1, arrow_dir+180, arrow_spread);

    draw_line(6,5[0]);
    draw_line(7,4[0]);
  
    if negated:
      draw_stroke_through_arrow(8,9)(1/2[foot, head], alpha, 3/2arrow_spread + equal_spread)
                          (70, 70, 100, 100);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "broken arrow (" & decimal alpha & ")";

    z0 = ifneg( 2/10, 3/10)[foot,head];
    z1 = ifneg(13/20,11/20)[foot,head];

    z2 = foot-1/2rule_thickness*dir arrow_dir; z3 = head;
    draw_arrowhead_fo(4)(head, arrow_dir, arrow_spread);
    draw_line(2,0);
    draw_line(1,4[0]);
  
    if negated:
      draw_stroke_through_arrow(6,7)(1/2[z0, z1], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 6/5, ifneg(3/2, 1) * arrow_spread#); "multi map (" & decimal alpha & ")";
    
    z1 =  foot-1/2rule_thickness*dir arrow_dir; z2 = head - (4/5arrow_spread + 1/2rule_thickness) * dir arrow_dir;
    draw_line(1,2);
    draw_circle(3)(head - (2/5arrow_spread + 1/2rule_thickness)* dir arrow_dir, 2/5arrow_spread+1/2rule_thickness);

    if negated:
      draw_stroke_through_arrow(7,8)(1/2[foot, head - 4/5arrow_spread * dir arrow_dir], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 6/5, ifneg(3/2, 1) * arrow_spread#); "filled multi map (" & decimal alpha & ")";

    z1 = foot-1/2rule_thickness*dir arrow_dir; z2 = head - 2/5arrow_spread * dir arrow_dir;
    draw_line(1,2);
    fill_circle_out(3)(head - (2/5arrow_spread+1/2rule_thickness) * dir arrow_dir, 2/5arrow_spread+1/2rule_thickness);

    if negated:
      draw_stroke_through_arrow(7,8)(1/2[foot, head - 4/5arrow_spread * dir arrow_dir], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "line with foot (" & decimal alpha & ")";

    z1 = foot; z2 = head;
    draw_line_ec(1,2);
    z3 = head - 1/2arrow_spread * dir (arrow_dir + 90);
    z4 = head + 1/2arrow_spread * dir (arrow_dir + 90);
    draw_line_ec(3,4);
  
    if negated:
      draw_stroke_through_arrow(5,6)(1/2[foot, head], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, 2/3med_op_size#); "arrow with round head (" & decimal alpha & ")";
  
    z0 = head - 1/3equal_spread * dir arrow_dir;

    z1 = foot; z2 = head - 1/4rule_thickness * dir arrow_dir;
    draw_line_ec(1,2);
    draw_smile(3)(1, z0 - 1/3med_op_size * dir (arrow_dir + 90),
                  z0 + 1/3med_op_size * dir (arrow_dir + 90),
                  2/3equal_spread, true);

    if negated:
      draw_stroke_through_arrow(6,7)(1/2[foot, head - 2/3equal_spread * dir arrow_dir], alpha, 2/3med_op_size)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, 3/4plus_size# + ifneg(1,0) * arrow_spread#); "pitchfork (" & decimal alpha & ")";
    pickup rule_pen;

    z1 = foot; z2 = head; draw_line_ec(1,2);
    draw_subset(3)(foot + 3/4plus_size * dir arrow_dir, foot, 3/4plus_size);

    if negated:
      draw_stroke_through_arrow(8,9)(1/2[foot, head - 3/8plus_size * dir arrow_dir],
                           alpha, 3/4plus_size + arrow_spread)
                          (80, 80, 100, 100, 80, 80, 100, 100);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, 2arrow_spread#); "parallel arrows (" & decimal alpha & ")";
    pickup rule_pen;

    z1 - z0 = z3 - z2 = arrow_spread * dir (arrow_dir + 90);

    0.5[z0,z1] = foot;
    0.5[z2,z3] = head;

    z5 = z3 - 1/2arrow_spread * dir arrow_dir;
    z7 = z2 - 1/2arrow_spread * dir arrow_dir;
  
    draw_line_ec(0,7);
    draw_line_ec(1,5);
    draw_arrowhead_fo_add(4)(z2, arrow_dir, arrow_spread);
    draw_arrowhead_fo_add(6)(z3, arrow_dir, arrow_spread);

    if negated:
      draw_stroke_through_arrow(8,9)(1/2[foot, head - 1/2arrow_spread * dir arrow_dir], alpha, 2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 1, 2arrow_spread#); "anti-parallel arrows right left (" & decimal alpha & ")";
    pickup rule_pen;

    z1 - z0 = z3 - z2 = arrow_spread * dir (arrow_dir + 90);

    0.5[z0,z1] = foot;
    0.5[z2,z3] = head;

    z5 = z3 - 1/2arrow_spread * dir arrow_dir;
    z7 = z0 + 1/2arrow_spread * dir arrow_dir;
  
    draw_line_ec(7,2);
    draw_line_ec(1,5);
    draw_arrowhead_fo_add(4)(z3, arrow_dir,     arrow_spread);
    draw_arrowhead_fo_add(6)(z0, arrow_dir+180, arrow_spread);

    if negated:
      draw_stroke_through_arrow(8,9)(1/2[foot, head], alpha, 2arrow_spread)
                          (80, 80, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 1, 2arrow_spread#); "anti-parallel arrows left right (" & decimal alpha & ")";

    z1 - z0 = z3 - z2 = arrow_spread * dir (arrow_dir + 90);

    0.5[z0,z1] = foot;
    0.5[z2,z3] = head;

    z5 = z1 + 1/2arrow_spread * dir arrow_dir;
    z7 = z2 - 1/2arrow_spread * dir arrow_dir;
  
    draw_line_ec(0,7);
    draw_line_ec(5,3);
    draw_arrowhead_fo_add(4)(z2, arrow_dir,     arrow_spread);
    draw_arrowhead_fo_add(6)(z1, arrow_dir+180, arrow_spread);

    if negated:
      draw_stroke_through_arrow(8,9)(1/2[foot, head], alpha, 2arrow_spread)
                          (70, 70, 100, 100);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "left right wave arrow (" & decimal alpha & ")";

    z0 = foot            - 1/10arrow_spread * dir (arrow_dir + 90);
    z1 = 15/80[foot,head] + 1/4arrow_spread * dir (arrow_dir + 90);
    z2 = 30/80[foot,head];
    z3 = 45/80[foot,head] - 1/4arrow_spread * dir (arrow_dir + 90);
    z4 = 60/80[foot,head];
    z5 = head            + 1/10arrow_spread * dir (arrow_dir + 90);

    penpos0(rule_thickness, arrow_dir + 45 + 90);
    penpos1(rule_thickness, arrow_dir + 90);
    penpos2(rule_thickness, arrow_dir - 45 + 90);
    penpos3(rule_thickness, arrow_dir + 90);
    penpos4(rule_thickness, arrow_dir + 45 + 90);
    penpos5(rule_thickness, arrow_dir + 15 + 90);

    draw_arrowhead_fo(6)(z5, arrow_dir+15, arrow_spread);
    penpos6[0](rule_thickness, arrow_dir + 15 + 90);
    penstroke z0e{dir (arrow_dir + 45)} .. z1e .. z2e{dir (arrow_dir - 45)} .. {dir arrow_dir}z3e{dir arrow_dir} .. {dir (arrow_dir + 45)}z4e ... {dir (arrow_dir+15)}z6[0].e;

    if negated:
      draw_stroke_through_arrow(8,9)(1/2[foot, head - 1/2arrow_spread * dir arrow_dir], alpha, 3/2arrow_spread)
                          (70, 70, 70, 70, 70, 70, 70, 70);
    fi
    penlabels(0,1,2,3,4,5);
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2, 1) * arrow_spread#); "right left wave arrow (" & decimal alpha & ")";

    z0 = foot            + 1/10arrow_spread * dir (arrow_dir + 90);
    z1 = 15/80[foot,head] - 1/4arrow_spread * dir (arrow_dir + 90);
    z2 = 30/80[foot,head];
    z3 = 45/80[foot,head] + 1/4arrow_spread * dir (arrow_dir + 90);
    z4 = 60/80[foot,head];
    z5 = head            - 1/10arrow_spread * dir (arrow_dir + 90);

    penpos0(rule_thickness, arrow_dir - 45 + 90);
    penpos1(rule_thickness, arrow_dir + 90);
    penpos2(rule_thickness, arrow_dir + 45 + 90);
    penpos3(rule_thickness, arrow_dir + 90);
    penpos4(rule_thickness, arrow_dir - 45 + 90);
    penpos5(rule_thickness, arrow_dir - 15 + 90);

    draw_arrowhead_fo(6)(z5, arrow_dir-15, arrow_spread);
    penpos6[0](rule_thickness, arrow_dir - 15 + 90);
  
    penstroke z0e{dir (arrow_dir - 45)} .. z1e .. z2e{dir (arrow_dir + 45)} .. {dir arrow_dir}z3e{dir arrow_dir} .. {dir (arrow_dir - 45)}z4e ... {dir (arrow_dir-15)}z6[0].e;

    if negated:
      draw_stroke_through_arrow(8,9)(1/2[foot, head - 1/2arrow_spread * dir arrow_dir], alpha, 3/2arrow_spread)
                          (110, 110, 110, 110, 110, 110, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 19/16, ifneg(3/2, 1) * arrow_spread#); "left right bidirectional wave arrow (" & decimal alpha & ")";
    pickup rule_pen;

    z0 = foot            - 1/10arrow_spread * dir (arrow_dir + 90);
    z1 =  4/20[foot,head];
    z2 =  7/20[foot,head] + 1/4arrow_spread * dir (arrow_dir + 90);
    z3 = 10/20[foot,head];
    z4 = 13/20[foot,head] - 1/4arrow_spread * dir (arrow_dir + 90);
    z5 = 16/20[foot,head];
    z6 = head            + 1/10arrow_spread * dir (arrow_dir + 90);

    penpos0(rule_thickness, arrow_dir + 15 + 90);
    penpos1(rule_thickness, arrow_dir + 45 + 90);
    penpos2(rule_thickness, arrow_dir + 90);
    penpos3(rule_thickness, arrow_dir - 45 + 90);
    penpos4(rule_thickness, arrow_dir + 90);
    penpos5(rule_thickness, arrow_dir + 45 + 90);
    penpos6(rule_thickness, arrow_dir + 15 + 90);

    draw_arrowhead_fo(7)(z0, arrow_dir + 195, arrow_spread);
    draw_arrowhead_fo(9)(z6, arrow_dir +  15, arrow_spread);
    penpos7[0](rule_thickness, arrow_dir + 15 + 90);
    penpos9[0](rule_thickness, arrow_dir + 15 + 90);

    penstroke z7[0].e{dir (arrow_dir + 15)} .. z1e{dir (arrow_dir + 45)} .. {dir arrow_dir}z2e{dir arrow_dir} .. {dir (arrow_dir - 45)}z3e{dir (arrow_dir - 45)} .. {dir arrow_dir}z4e{dir arrow_dir} .. {dir (arrow_dir + 45)}z5e ... {dir (arrow_dir+15)}z9[0].e;


    if negated:
      draw_stroke_through_arrow(11,12)(1/2[foot, head], alpha, 3/2arrow_spread)
                          (70, 70, 70, 70);
    fi
    penlabels(0,1,2,3,4,5,6);
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 19/16, ifneg(3/2, 1) * arrow_spread#); "right left bidirectional wave arrow (" & decimal alpha & ")";

    z0 = foot            + 1/10arrow_spread * dir (arrow_dir + 90);
    z1 =  4/20[foot,head];
    z2 =  7/20[foot,head] - 1/4arrow_spread * dir (arrow_dir + 90);
    z3 = 10/20[foot,head];
    z4 = 13/20[foot,head] + 1/4arrow_spread * dir (arrow_dir + 90);
    z5 = 16/20[foot,head];
    z6 = head            - 1/10arrow_spread * dir (arrow_dir + 90);

    penpos0(rule_thickness, arrow_dir - 15 + 90);
    penpos1(rule_thickness, arrow_dir - 45 + 90);
    penpos2(rule_thickness, arrow_dir + 90);
    penpos3(rule_thickness, arrow_dir + 45 + 90);
    penpos4(rule_thickness, arrow_dir + 90);
    penpos5(rule_thickness, arrow_dir - 45 + 90);
    penpos6(rule_thickness, arrow_dir - 15 + 90);

    draw_arrowhead_fo(7)(z0, arrow_dir - 195, arrow_spread);
    draw_arrowhead_fo(9)(z6, arrow_dir -  15, arrow_spread);
    penpos7[0](rule_thickness, arrow_dir - 15 + 90);
    penpos9[0](rule_thickness, arrow_dir - 15 + 90);
  
    penstroke z7[0].e{dir (arrow_dir - 15)} .. z1e{dir (arrow_dir - 45)} .. {dir arrow_dir}z2e{dir arrow_dir} .. {dir (arrow_dir + 45)}z3e{dir (arrow_dir + 45)} .. {dir arrow_dir}z4e{dir arrow_dir} .. {dir (arrow_dir - 45)}z5e{dir (arrow_dir - 45)} ... {dir (arrow_dir-15)}z9[0].e;

    if negated:
      draw_stroke_through_arrow(11,12)(1/2[foot, head], alpha, 3/2arrow_spread)
                          (110, 110, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2,10/9) * arrow_spread#); "right bend arrow (" & decimal alpha & ")";

    z0 = foot           - 5/9arrow_spread * dir (arrow_dir + 90);
    z1 = 2/5[foot,head] + 1/3arrow_spread * dir (arrow_dir + 90);
    z2 = head           - 5/9arrow_spread * dir (arrow_dir + 90);

    penpos0(rule_thickness,arrow_dir + 180);
    penpos1(rule_thickness,(arrow_dir) + 90);
    penpos2(rule_thickness,(arrow_dir - 60 + 90));

    draw_arrowhead_fo(3)(z2, arrow_dir - 60, arrow_spread);
    penpos3[0](rule_thickness,(arrow_dir - 60 + 90));
  
    penstroke z0e{dir(arrow_dir + 90)} .. z1e .. z3[0].e;
  

    if negated:
      draw_stroke_through_arrow(5,6)(1/10[z1,z2], alpha, 3/2arrow_spread)
                          (80, 80, 80, 80, 80, 80, 80, 80);
    fi
    penlabels(0,1,2);
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2,10/9)*arrow_spread#); "left bend arrow (" & decimal alpha & ")";

    z0 = foot           + 5/9arrow_spread * dir (arrow_dir + 90);
    z1 = 2/5[foot,head] - 1/3arrow_spread * dir (arrow_dir + 90);
    z2 = head           + 5/9arrow_spread * dir (arrow_dir + 90);

    penpos0(rule_thickness,arrow_dir);
    penpos1(rule_thickness,(arrow_dir) + 90);
    penpos2(rule_thickness,(arrow_dir + 60 + 90));

    draw_arrowhead_fo(3)(z2, arrow_dir + 60, arrow_spread);
    penpos3[0](rule_thickness,(arrow_dir + 60 + 90));  
    penstroke z0e{dir (arrow_dir-90)} .. z1e .. z3[0].e;

    if negated:
      draw_stroke_through_arrow(5,6)(1/10[z1,z2], alpha, 3/2arrow_spread)
                          (110, 110, 110, 110, 110, 110, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(3/2,10/9)*arrow_spread#); "bend arrow (" & decimal alpha & ")";

    z0 = foot           - 5/9arrow_spread * dir (arrow_dir + 90);
    z1 = 1/2[foot,head] + 1/3arrow_spread * dir (arrow_dir + 90);
    z2 = head           - 5/9arrow_spread * dir (arrow_dir + 90);

    penpos0(rule_thickness,arrow_dir + 60 + 90);
    penpos1(rule_thickness,arrow_dir + 90);
    penpos2(rule_thickness,arrow_dir - 60 + 90);
  
    draw_arrowhead_fo(3)(z0, arrow_dir + 240, arrow_spread);
    penpos3[0](rule_thickness,(arrow_dir + 60 + 90));  
    draw_arrowhead_fo(5)(z2, arrow_dir -  60, arrow_spread);
    penpos5[0](rule_thickness,(arrow_dir - 60 + 90));

    penstroke z3[0].e .. z1e .. z5[0].e;

    if negated:
      draw_stroke_through_arrow(7,8)(z1, alpha, 3/2arrow_spread)
                          (80, 80, 100, 100, 80, 80, 100, 100);
    fi
    penlabels(0,1,2);
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 1, ifneg(3/2,1) * arrow_spread#); "headless arrow (" & decimal alpha & ")";

    z1 = foot; z2 = head; draw_line_ec(1,2);

    if negated:
      draw_stroke_through_arrow(3,4)(1/2[foot, head], alpha, 3/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 45, 135:
  beginarrow(alpha, 6/5, ifneg(19/10, 13/10) * arrow_spread#); "double headless arrow (" & decimal alpha & ")";

    z1 - z0 = z3 - z2 = equal_spread * dir (arrow_dir + 90);

    0.5[z0,z1] = foot;
    0.5[z2,z3] = head;

    draw_line_ec(0,2);
    draw_line_ec(1,3);

    if negated:
      draw_stroke_through_arrow(4,5)(1/2[foot, head], alpha, 19/10arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 2/3, ifneg(2, 3/2) * arrow_spread#); "derives (" & decimal alpha & ")";

    z1 = foot; z2 = head;
    draw_line_ec(1,2);
    z3 = foot - 3/4arrow_spread * dir (arrow_dir + 90);
    z4 = foot + 3/4arrow_spread * dir (arrow_dir + 90);
    draw_line_ec(3,4);
  
    if negated:
      draw_stroke_through_arrow(5,6)(1/2[foot, head], alpha, 2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 2/3, ifneg(9/4, 7/4) * arrow_spread#); "models (" & decimal alpha & ")";

    z1 - z0 = z3 - z2 = equal_spread * dir (arrow_dir + 90);

    0.5[z0,z1] = foot;
    0.5[z2,z3] = head;

    z4 = z0; draw_line_ec(4,2);
    z5 = z1; draw_line_ec(5,3);
    z6 = foot - 7/8arrow_spread * dir (arrow_dir + 90);
    z7 = foot + 7/8arrow_spread * dir (arrow_dir + 90);
    draw_line_ec(6,7);
  
    if negated:
      draw_stroke_through_arrow(8,9)(1/2[foot, head], alpha, 9/4arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 5/6, ifneg(9/4, 7/4) * arrow_spread#); "forces (" & decimal alpha & ")";

    z0 = foot + equal_spread * dir arrow_dir;

    z1 = z0; z2 = head;
    draw_line_ec(1,2);
    z3 = foot - 7/8arrow_spread * dir (arrow_dir + 90);
    z4 = foot + 7/8arrow_spread * dir (arrow_dir + 90);
    draw_line_ec(3,4);
    z5 = z0   - 7/8arrow_spread * dir (arrow_dir + 90);
    z6 = z0   + 7/8arrow_spread * dir (arrow_dir + 90);
    draw_line_ec(5,6);
    
    if negated:
      draw_stroke_through_arrow(7,8)(1/2[z0, head], alpha, 9/4arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for alpha = 0, 90, 180, 270, 45, 135, 225, 315:
  beginarrow(alpha, 1, ifneg(5/2, 2) * arrow_spread#); "double models (" & decimal alpha & ")";

    z1 - z0 = z3 - z2 = equal_spread * dir (arrow_dir + 90);

    z4 = foot + equal_spread * dir arrow_dir;

    0.5[z0,z1] = z4;
    0.5[z2,z3] = head;

    z5 = z0; draw_line_ec(5,2);
    z6 = z1; draw_line_ec(6,3);
    z7 = foot - arrow_spread * dir (arrow_dir + 90);
    z8 = foot + arrow_spread * dir (arrow_dir + 90);
    draw_line_ec(7,8);
    z9 = z4   - arrow_spread * dir (arrow_dir + 90);
    z10= z4   + arrow_spread * dir (arrow_dir + 90);
    draw_line_ec(9,10);
  
    if negated:
      draw_stroke_through_arrow(11,12)(1/2[z4, head], alpha, 5/2arrow_spread)
                          (70, 70, 110, 110, 70, 70, 110, 110);
    fi
  endchar;
endfor;

for sign = 1, -1:
  for alpha = 0, 90, 180, 270:
    beginoperator(large_op_size#, 1);
      if sign > 0: "right" else: "left" fi & " circle arrow (" & decimal alpha & ")";

      r := 0.8(w/2-u) - 1.1rule_thickness;

      reg_poly_points_p(a)(8, centre, r, alpha,1);

      z0 = centre + r * dir (alpha + 10);
      z1 = centre + r * dir (alpha - 10);
      penpos0(rule_thickness,alpha+100-90);
      penpos1(rule_thickness,alpha+80-90);
      
      if sign > 0:
        draw_arrowhead_fo(2)(z1, (alpha + 65), arrow_spread);
	penpos2[0](rule_thickness,alpha+80-90);
	penstroke z0e{dir (alpha + 100)} .. z.a1e .. z.a2e .. z.a3e .. z.a4e .. z.a5e .. z.a6e .. z.a7e ..
          {dir (alpha + 80)}z2[0]e;
      else:
        draw_arrowhead_fo(2)(z0, (alpha - 65), arrow_spread);
	penpos2[0](rule_thickness,alpha+100-90);
	penstroke z2[0].e{dir (alpha + 100)} .. z.a1e .. z.a2e .. z.a3e .. z.a4e .. z.a5e .. z.a6e .. z.a7e ..
          {dir (alpha + 80)}z1e;
      fi;

      penlabels(0,1);

      if negated:
         1/2[z2,z3] = centre;
         y2 - y3 = large_op_size;
         z2 - z3 = whatever * dir 80;

         draw_line_scaled(2,3)(stroke_through_thickness_factor);
      fi
    endchar;
  endfor;
endfor;

%for alpha = 0, 90, 180, 270:
%  beginoperator(large_op_size#, 1); "left circle arrow (" & decimal alpha & ")";
%    pickup rule_pen;
%
%    r := 0.8(w/2-u) - 1.1rule_thickness;
%
%    reg_poly_points(a)(8, centre, r, alpha);
%
%    z0 = centre + r * dir (alpha + 10);
%    z1 = centre + r * dir (alpha - 10);
%
%    draw z0{dir (alpha + 100)} .. z.a1 .. z.a2 .. z.a3 .. z.a4 .. z.a5 .. z.a6 .. z.a7 ..
%        {dir (alpha + 80)}z1;
%    draw arrowhead_fo(z0, (alpha - 65), arrow_spread);
%
%    if negated:
%       1/2[z2,z3] = centre;
%       y2 - y3 = large_op_size;
%       z2 - z3 = whatever * dir 80;
%
%       pickup stroke_pen;
%       draw z2 -- z3;
%    fi
%  endchar;
%endfor;

