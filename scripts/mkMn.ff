#!/usr/local/bin/fontforge

size=Strtol($argv[1]);
suffix=$argv[2];
names=["A", "B", "C", "D", "E", "F"];

Open("../source/MnSymbol"+names[0]+suffix+size+".pfb");

SetFontNames("MnSymbol"+size,"MnSymbol","MnSymbol"+size,"Regular","Design by Achim Blumensath, Conversion to pfb by Michael Zedler. This font is in the public domain","1.001");
if (suffix=="-Bold") 
  SetFontNames("MnSymbol-Bold"+size,"MnSymbol","MnSymbol-Bold"+size,"Bold","Design by Achim Blumensath, Conversion to pfb by Michael Zedler. This font is in the public domain","1.001");
  ChangePrivateEntry("ForceBold","true");
endif

# Load encoding files and glpyh names from pfb
fname=0;
while (fname<=5)
  LoadEncodingFile("../enc/MnSymbol"+names[fname]+".enc");
  if (fname>0) MergeFonts("../source/MnSymbol"+names[fname]+suffix+size+".pfb"); endif
  fname++;
endloop

# Clear pfb content, only keep the glyph names
SelectAll();
Clear();

# Load A, B, E (E contains arrowtips, useful for outline regularization)
fname=0
while (fname<=4)
  Reencode("MnSymbol"+names[fname]);
  ii=0;
  while(ii<=255);  
    Select(ii);
    Import("../source/MnSymbol"+names[fname]+suffix+size+"."+ii+".eps");
    ii++;
  endloop
  fname++;
  if (fname==2) fname=fname+2;endif
endloop

# Doing a RemoveOverlap on some glpyhs of MnSymbolE takes ages otherwise
Reencode("MnSymbolE");
Select(204,208);
RoundToInt();

# Start with A+B+E
Reencode("MnSymbolA");

SelectAll();
CopyFgToBg();

# ReplaceWithReference both regularized glyphs (good for subroutine generation) in A+B and makes RemoveOverlap fail less often

# Force negated versions of uni21C9...swnearrows to reference the non-negated glyphs
Select("uni21C9","swnearrows");
ReplaceWithReference();
# Next the normal arrows 
Select("arrowright","arrowdownright");
ReplaceWithReference();
SelectAll();
# Everything except simple lines
SelectFewer("leftrightline","nwseline");
SelectFewer("leftrightline_uni0338","nwseline_uni0338");
ReplaceWithReference();
# Everything
SelectAll();
ReplaceWithReference();
SelectAll();

if (suffix=="-Bold" && size==6) 
  SelectSingletons("uni219D","uni21AD","curvearrowupdown","curvearrowdownup");
  AddExtrema();
  Select("curvearrownesw");
  Simplify();
  SelectSingletons("uplsquigarrow_uni0338","squigarrowupdown_uni0338");
  UnlinkReference();
  AddExtrema();
endif

RemoveOverlap();
Select("uni21C9","swnearrows");
UnlinkReference();

# correct double arrows
if (suffix!="-Bold") 
  if (size==7) Select("uni21C7");AddExtrema();endif
  if (size==8 || size==9 || size==12) Select("uni21CA");AddExtrema();endif
else
  if (size==6) SelectSingletons("uni21C9","uni21C7","uni21CA");Simplify();RoundToInt();endif
  if (size==9 || size==12) Select("uni21C7");AddExtrema();endif
endif

Select("uni21C9","swnearrows");
RemoveOverlap();
SelectAll();
SelectFewer("uni21CC","nwseharpoons");
SelectFewer("arrowrightoverleft","senwarrows");
UnlinkReference();
SelectAll();
RemoveOverlap();
ReplaceWithReference();
SelectAll();
AddExtrema();
SelectFewer("uni20D7");
Simplify();

# Load the remaining eps
fname=2
while (fname<=5)
  Reencode("MnSymbol"+names[fname]);
  ii=0;
  while(ii<=255);  
    Select(ii);
    Import("../source/MnSymbol"+names[fname]+suffix+size+"."+ii+".eps");
    ii++;
  endloop
  Select(0,255);
  CopyFgToBg();
  fname++;
  if (fname==4) fname++;endif
endloop

Print("D");
Reencode("MnSymbolD");
SelectSingletons("notequal","uni2241","uni2249","dotmath");
ReplaceWithReference();
Select(0,255);
ReplaceWithReference();
# special treatment of 'similar' glyphs
SelectSingletons("similar","uni223D");  
ReplaceWithReference(5.0);
SelectSingletons("similar","uni223D");  
Simplify();RoundToInt();AddExtrema();Simplify();
Select(0,255);
SelectFewer(0,119);
SelectMoreSingletons("uni2256","element","suchthat");
if (suffix=="-Bold") SelectMoreSingletons("uni2257");endif
UnlinkReference();
RemoveOverlap();
SelectSingletons("notequal","uni2241","uni2249","dotmath");
ReplaceWithReference();
Select(0,255);
ReplaceWithReference();
Select(0,255);
AddExtrema();
Simplify();
if (suffix!="-Bold")
  if (size==8) Select("uni227F0338");RemoveOverlap();endif
else
  if (size==5) Select(0,255);UnlinkReference();Select(0,255);RemoveOverlap();ReplaceWithReference();endif
endif
Print("F");
Reencode("MnSymbolF");
Select("integral","uni222C.disp");
ReplaceWithReference(8.0);
Select(0,255);
ReplaceWithReference();
Select(0,255);
RemoveOverlap();
UnlinkReference();
RemoveOverlap();
ReplaceWithReference();
Select(0,255);
AddExtrema();
Simplify();
Print("C");
Reencode("MnSymbolC");
if (suffix!="-Bold") 
  if (size==5) Select("aleph");Import("../source/MnSymbolC5.175.eps",0,24);endif
  if (size==6) Select("gradient");RoundToInt();endif
  if (size==9) SelectSingletons("asteriskmath","gradient");RoundToInt();endif
else
  if (size==7) Select("uni2272","uni2A86");SelectMore("uni2274","uni2A8A");Simplify();endif
  if (size==8) Select("gradient");RoundToInt();endif
endif
Select(0,255);
SelectMore("arrow0","arrow7");
SelectMoreSingletons("similar","uni223D");  
ReplaceWithReference();
Select(0,255);
SelectFewer("uni2272","uni2A86");
UnlinkReference();
Select(0,255);
RemoveOverlap();
AddExtrema();
Simplify();

SelectAll();
UnlinkReference();
SelectAll();
ReplaceWithReference();

SelectAll();
RoundToInt();
AutoHint();
ReplaceWithReference();

Save("MnSymbol-pre"+suffix+size+".sfd");

